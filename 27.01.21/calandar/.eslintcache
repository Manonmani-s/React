[{"/home/dci/Documents/React/27.01.21/calandar/src/index.js":"1","/home/dci/Documents/React/27.01.21/calandar/src/App.jsx":"2","/home/dci/Documents/React/27.01.21/calandar/src/Calandar.jsx":"3","/home/dci/Documents/React/27.01.21/calandar/src/ListItem.jsx":"4"},{"size":159,"mtime":1611753634066,"results":"5","hashOfConfig":"6"},{"size":87,"mtime":1611759583548,"results":"7","hashOfConfig":"6"},{"size":245,"mtime":1611826319207,"results":"8","hashOfConfig":"6"},{"size":1040,"mtime":1611832067502,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1decwck",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"/home/dci/Documents/React/27.01.21/calandar/src/index.js",[],["21","22"],"/home/dci/Documents/React/27.01.21/calandar/src/App.jsx",[],"/home/dci/Documents/React/27.01.21/calandar/src/Calandar.jsx",["23","24"],"\nimport React, {useState,useEffect} from 'react'\nimport ListItem from './ListItem'\nimport './Calandar.css'\n\nconst Calandar = () => {\n    return (\n        <div id='fullDiv'>\n         <ListItem />\n        </div>\n    )\n}\n\nexport default Calandar\n\n\n","/home/dci/Documents/React/27.01.21/calandar/src/ListItem.jsx",["25"],"\nimport React from 'react'\n\nconst days =['Sun','Mon','Tues','Wed','Thurs','Fri','Sat'];\nconst dates = [];\nfor(let i=0;i<31;i++) dates[i] = i+1;\n\nconst dayslist=[{days:days},{dates:dates}];\n\nconst SimpleList = (list) => {\n return <ul>\n   \n    {list.list[0].days.map((item)=>(<li key={item}>{item}</li>))}\n    {list.list[1].dates.map((item)=>(<li key={item}>{item}</li>))}\n\n    {list.list[1].dates.map((item,idx,array)=>\n    {\n     \n      for(let i = idx + 1, date = 1; i % 7 === 0; i++,date++)\n        \n      { \n        \n         return(\n          \n        <li key={idx+8}>{date}</li>\n        )\n      } \n    }\n    )}\n\n\n  </ul>\n};\n\nconst ListItem = () => (\n  <SimpleList list={dayslist} />\n);\n\nexport default ListItem\n\n\n\n\n\n\n\n\n\n//(item,idx,array)\n//index/7=0 insert a new table row and clsoe the prev one\n//put 7 items\n//insert a row\n//when index=0 dont close the prev one\n//check if arry.length -1 ==index(last item)--finish the array \n//for loop, for(let i = idx + 1, date = 1; i % 7 == 0; i++, date++)\n//<td class=\"disabled\">date</td>\n\n\n\n \n",{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":2,"column":16,"nodeType":"32","messageId":"33","endLine":2,"endColumn":24},{"ruleId":"30","severity":1,"message":"34","line":2,"column":25,"nodeType":"32","messageId":"33","endLine":2,"endColumn":34},{"ruleId":"35","severity":1,"message":"36","line":16,"column":45,"nodeType":"37","messageId":"38","endLine":16,"endColumn":47},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]